type NFT @entity {
  id: ID!
  tokenID: BigInt!
  tokenURI: String
  image: String
  name: String
  description: String
  dna: String
  edition: BigInt
  date: BigInt
  attributes: [Attribute!]
  compiler: String
  owner: User!
  collection: NFTCollection!
  listNFTs: [ListNFT!]! @derivedFrom(field: "nft")
  buyNFTs: [BuyNFT!]! @derivedFrom(field: "nft")
  offerNFTs: [OfferNFT!]! @derivedFrom(field: "nft")
  auctionNFTs: [AuctionNFT!]! @derivedFrom(field: "nft")
}

type Attribute @entity {
  id: ID!
  traitType: String!
  value: String!
  nfts: [NFT!] @derivedFrom(field: "attributes")
}

type User @entity {
  id: ID!
  address: String!
  nfts: [NFT!] @derivedFrom(field: "owner")
  listNFTs: [ListNFT!]! @derivedFrom(field: "seller")
  buyNFTs: [BuyNFT!]! @derivedFrom(field: "buyer")
  auctionNFTs: [AuctionNFT!]! @derivedFrom(field: "creator")
  wonAuctionNFTs: [AuctionNFT!]! @derivedFrom(field: "winner")
  nftCollections: [NFTCollection!]! @derivedFrom(field: "creator")
  royaltyRecievingCollections: [NFTCollection!]!
    @derivedFrom(field: "royaltyRecipient")
}

type NFTCollection @entity {
  id: ID!
  address: String!
  name: String
  symbol: String
  maxSupply: BigInt
  baseURI: String
  mintPrice: BigInt
  royaltyFee: BigInt
  royaltyRecipient: User
  creator: User
}

type ListNFT @entity {
  id: ID!
  nft: NFT!
  seller: User!
  price: BigInt
  sold: Boolean!
  date: BigInt!
  boughtNFT: BuyNFT @derivedFrom(field: "listNFT")
}

type BuyNFT @entity {
  id: ID!
  nft: NFT!
  buyer: User!
  date: BigInt!
  listNFT: ListNFT!
}

type OfferNFT @entity {
  id: ID!
  nft: NFT!
  offerer: String!
  offerPrice: BigInt
  accepted: Boolean!
}

type AuctionNFT @entity {
  id: ID!
  nft: NFT!
  creator: User!
  initialPrice: BigInt
  minBid: BigInt
  startTime: BigInt
  endTime: BigInt
  lastBidder: String
  heighestBid: BigInt
  winner: User
  success: Boolean!
}

type _Schema_
  @fulltext(
    name: "covenSearch"
    language: en
    algorithm: rank
    include: [
      { entity: "NFT", fields: [{ name: "name" }, { name: "description" }] }
      {
        entity: "Attribute"
        fields: [{ name: "traitType" }, { name: "value" }]
      }
    ]
  )